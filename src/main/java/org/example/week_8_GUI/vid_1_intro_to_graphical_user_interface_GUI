Intro to Java Graphical User Interfaces (slide2)

So far…

-Our programs have carried out the tasks in the order you programmed it to
-There are if statements, loops, methods, but essentially you are in control
    of what happens when - you give the user choices

Graphical User Interface (GUI) Programming (slide 3)

-Event Driven
-Program presents user with GUI (pronounced gooey)
-User can interact with any enabled feature of the GUI
-Program should respond appropriately
-User clicking a button, or typing, or selecting an item from a list etc... are events
-So, event driven programming

Overview of GUI Programming (slide 4)

-Think about your GUI design - what components will it need?
-Create your GUI from GUI components – frames, buttons, lists, labels, layout managers…
-Decide which component does what
-For example, you may want something to happen when user clicks a button,
-and something else to happen when selecting an item from a list,
-And something else when user checks a checkbox
-Write an Event Handler method for each event – so in this example you'll write
    3 event handler methods, one for each of the 3 events – clicking a button,
    selecting item from a list, checking a checkbox

The state of GUI programming in Java (slide 5)

-AWT: Original Java GUI toolkit, in Java 1 and up. Basic components.
-Swing: extended, more sophisticated version of AWT, Java 2 and up.
-JavaFX: designed to replace Swing, only works with Java 8; separate
    library to the standard JDK; lots of features and customization although
    more complexity, never became as popular as Swing because…
-Web and Mobile: today, desktop apps are a relatively small market
-Java web apps are HUGE - eBay, Amazon, Netflix, Google, Twitter.…
-Android development

-We'll use Swing in this class: it's still being used, there's a lot more
    documentation and resources than JavaFX
-Web and Android apps are very interesting, but they have a lot of parts -
    we don't have time to cover all the concepts
-IntelliJ is built in Swing!



